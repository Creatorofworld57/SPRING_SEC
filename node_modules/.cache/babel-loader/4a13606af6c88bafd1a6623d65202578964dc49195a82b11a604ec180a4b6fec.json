{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimu2\\\\Java\\\\SpringSecurity_1805\\\\Frontend\\\\spa\\\\src\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Styles/Profile.css';\nimport { useNavigate } from 'react-router-dom';\nimport Menu from './Menu';\nimport { FaGithub, FaTelegramPlane } from 'react-icons/fa'; // Импорт иконок\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const navigate = useNavigate();\n  const [menuActive, setMenuActive] = useState(false);\n  const [isChecked, setIsChecked] = useState(false);\n  const [url1, setUrl1] = useState('');\n  const [url2, setUrl2] = useState('');\n  const [userImage, setUserImage] = useState('');\n  const redirectTo = url => {\n    navigate(url);\n  };\n  const userSocials = async () => {\n    try {\n      const response = await fetch('https://localhost:8080/api/socials', {\n        method: 'GET',\n        credentials: 'include'\n      });\n      const user = await response.json();\n      setUrl1(user.telegram);\n      setUrl2(user.git);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  useEffect(() => {\n    userInfo();\n    userSocials();\n\n    // Устанавливаем начальное значение isChecked в зависимости от цвета фона\n    const initialBackgroundColor = getComputedStyle(document.body).backgroundColor;\n    setIsChecked(initialBackgroundColor === 'rgb(46, 46, 46)'); // Проверка на темный цвет\n  }, []);\n  const handleChange = event => {\n    const checked = event.target.checked;\n    setIsChecked(checked);\n    document.body.style.backgroundColor = checked ? '#2e2e2e' : 'lightgrey';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"burger-btn\",\n        onClick: () => setMenuActive(!menuActive),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: menuActive ? 'line1 active' : 'line1'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: menuActive ? 'line2 active' : 'line2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: menuActive ? 'line3 active' : 'line3'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back_up\",\n      onClick: () => redirectTo('/'),\n      children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"toggle\",\n        className: \"toggle-input\",\n        checked: isChecked,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"toggle\",\n        className: \"toggle-label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      active: menuActive,\n      setActive: setMenuActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), url1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"link-preview\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url1,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: [/*#__PURE__*/_jsxDEV(FaTelegramPlane, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), \" \", url1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), url2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"link-preview1\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url2,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: [/*#__PURE__*/_jsxDEV(FaGithub, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), \" \", url2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"w69xK2uMUiTebplpjyB7JzKXnGw=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Menu","FaGithub","FaTelegramPlane","jsxDEV","_jsxDEV","Profile","_s","navigate","menuActive","setMenuActive","isChecked","setIsChecked","url1","setUrl1","url2","setUrl2","userImage","setUserImage","redirectTo","url","userSocials","response","fetch","method","credentials","user","json","telegram","git","error","console","userInfo","initialBackgroundColor","getComputedStyle","document","body","backgroundColor","handleChange","event","checked","target","style","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","htmlFor","active","setActive","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/dimu2/Java/SpringSecurity_1805/Frontend/spa/src/Profile.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Styles/Profile.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Menu from './Menu';\r\nimport { FaGithub, FaTelegramPlane } from 'react-icons/fa'; // Импорт иконок\r\n\r\nconst Profile = () => {\r\n    const navigate = useNavigate();\r\n    const [menuActive, setMenuActive] = useState(false);\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [url1, setUrl1] = useState('');\r\n    const [url2, setUrl2] = useState('');\r\n    const [userImage, setUserImage] = useState('');\r\n\r\n    const redirectTo = (url) => {\r\n        navigate(url);\r\n    };\r\n\r\n    const userSocials = async () => {\r\n        try {\r\n            const response = await fetch('https://localhost:8080/api/socials', {\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            });\r\n            const user = await response.json();\r\n            setUrl1(user.telegram);\r\n            setUrl2(user.git);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        userInfo();\r\n        userSocials();\r\n\r\n        // Устанавливаем начальное значение isChecked в зависимости от цвета фона\r\n        const initialBackgroundColor = getComputedStyle(document.body).backgroundColor;\r\n        setIsChecked(initialBackgroundColor === 'rgb(46, 46, 46)'); // Проверка на темный цвет\r\n    }, []);\r\n\r\n    const handleChange = (event) => {\r\n        const checked = event.target.checked;\r\n        setIsChecked(checked);\r\n\r\n        document.body.style.backgroundColor = checked ? '#2e2e2e' : 'lightgrey';\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <div className='burger-btn' onClick={() => setMenuActive(!menuActive)}>\r\n                    <span className={menuActive ? 'line1 active' : 'line1'}/>\r\n                    <span className={menuActive ? 'line2 active' : 'line2'}/>\r\n                    <span className={menuActive ? 'line3 active' : 'line3'}/>\r\n                </div>\r\n            </nav>\r\n\r\n            <main>\r\n                <div>\r\n\r\n                </div>\r\n            </main>\r\n            <button className=\"back_up\" onClick={() => redirectTo('/')}>Назад</button>\r\n            <div className=\"toggle-switch\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id=\"toggle\"\r\n                    className=\"toggle-input\"\r\n                    checked={isChecked}\r\n                    onChange={handleChange}\r\n                />\r\n                <label htmlFor=\"toggle\" className=\"toggle-label\"></label>\r\n            </div>\r\n            <Menu active={menuActive} setActive={setMenuActive}/>\r\n            {url1 && (\r\n                <div className=\"link-preview\">\r\n                    <a href={url1} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <FaTelegramPlane/> {url1}\r\n                    </a>\r\n                </div>\r\n            )}\r\n            {url2 && (\r\n                <div className=\"link-preview1\">\r\n                    <a href={url2} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <FaGithub/> {url2}\r\n                    </a>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}