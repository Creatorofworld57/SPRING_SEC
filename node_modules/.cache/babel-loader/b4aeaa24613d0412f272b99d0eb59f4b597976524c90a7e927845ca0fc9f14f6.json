{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./Styles/ID.css';// Импортируйте CSS файл\nimport{useNavigate}from\"react-router-dom\";import'./Styles/All.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const All=()=>{const[data,setData]=useState([]);const[error,setError]=useState(null);const[loading,setLoading]=useState(true);// Добавляем состояние загрузки\nconst navigate=useNavigate();// Используем хук для навигации, если нужно\nuseEffect(()=>{jsonFromBack();},[]);const redirectTo=url=>{navigate(url);};const jsonFromBack=async()=>{setLoading(true);// Устанавливаем состояние загрузки перед началом запроса\ntry{const response=await fetch(\"https://localhost:8080/api/All\",{method:'GET',credentials:\"include\"});if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}const result=await response.json();setData(result);}catch(error){setError(error.message);}finally{setLoading(false);// Сбрасываем состояние загрузки после завершения запроса\n}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading...\"});// Показываем индикатор загрузки\n}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[\"Error: \",error]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"table-container1\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table1\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"thead1\",children:/*#__PURE__*/_jsxs(\"tr\",{className:\"tr1\",children:[/*#__PURE__*/_jsx(\"th\",{children:\"Author\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Version\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:data.length>0?data.map((item,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:item.author}),/*#__PURE__*/_jsx(\"td\",{children:item.name}),/*#__PURE__*/_jsx(\"td\",{children:item.version})]},index)):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"3\",children:\"No data available\"})})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"button-container1\",children:/*#__PURE__*/_jsx(\"button\",{className:\"back_up1\",onClick:()=>redirectTo('/'),children:\"\\u041D\\u0430\\u0437\\u0430\\u0434\"})})]});};export default All;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","All","data","setData","error","setError","loading","setLoading","navigate","jsonFromBack","redirectTo","url","response","fetch","method","credentials","ok","Error","concat","status","result","json","message","className","children","length","map","item","index","author","name","version","colSpan","onClick"],"sources":["C:/Users/dimu2/Java/SpringSecurity_1805/Frontend/spa/src/All.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Styles/ID.css'; // Импортируйте CSS файл\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './Styles/All.css';\r\n\r\nconst All = () => {\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(true); // Добавляем состояние загрузки\r\n    const navigate = useNavigate(); // Используем хук для навигации, если нужно\r\n\r\n    useEffect(() => {\r\n        jsonFromBack();\r\n    }, []);\r\n\r\n    const redirectTo = (url) => {\r\n        navigate(url);\r\n    };\r\n\r\n    const jsonFromBack = async () => {\r\n        setLoading(true); // Устанавливаем состояние загрузки перед началом запроса\r\n        try {\r\n            const response = await fetch(`https://localhost:8080/api/All`, {\r\n                method: 'GET',\r\n                credentials: \"include\"\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n\r\n            const result = await response.json();\r\n            setData(result);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        } finally {\r\n            setLoading(false); // Сбрасываем состояние загрузки после завершения запроса\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div className=\"loading\">Loading...</div>; // Показываем индикатор загрузки\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"error\">Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container1\">\r\n            <div className=\"table-container1\">\r\n                <table className=\"table1\">\r\n                    <thead className=\"thead1\">\r\n                    <tr className=\"tr1\">\r\n                        <th>Author</th>\r\n                        <th>Name</th>\r\n                        <th>Version</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {data.length > 0 ? (\r\n                        data.map((item, index) => (\r\n                            <tr key={index}>\r\n                                <td>{item.author}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.version}</td>\r\n                            </tr>\r\n                        ))\r\n                    ) : (\r\n                        <tr>\r\n                            <td colSpan=\"3\">No data available</td>\r\n                        </tr>\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"button-container1\">\r\n                <button className=\"back_up1\" onClick={() => redirectTo('/')}>Назад</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default All;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}